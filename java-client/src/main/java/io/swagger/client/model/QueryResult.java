/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * QueryResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-06-12T13:59:37.724Z")
public class QueryResult {
  @SerializedName("explanation")
  private List<String> explanation = null;

  @SerializedName("explanationRulesHeadWithoutVariables")
  private List<String> explanationRulesHeadWithoutVariables = null;

  @SerializedName("explanationStr")
  private String explanationStr = null;

  @SerializedName("humanExplanation")
  private String humanExplanation = null;

  @SerializedName("variables")
  private Map<String, String> variables = null;

  public QueryResult explanation(List<String> explanation) {
    this.explanation = explanation;
    return this;
  }

  public QueryResult addExplanationItem(String explanationItem) {
    if (this.explanation == null) {
      this.explanation = new ArrayList<String>();
    }
    this.explanation.add(explanationItem);
    return this;
  }

   /**
   * Get explanation
   * @return explanation
  **/
  @ApiModelProperty(value = "")
  public List<String> getExplanation() {
    return explanation;
  }

  public void setExplanation(List<String> explanation) {
    this.explanation = explanation;
  }

  public QueryResult explanationRulesHeadWithoutVariables(List<String> explanationRulesHeadWithoutVariables) {
    this.explanationRulesHeadWithoutVariables = explanationRulesHeadWithoutVariables;
    return this;
  }

  public QueryResult addExplanationRulesHeadWithoutVariablesItem(String explanationRulesHeadWithoutVariablesItem) {
    if (this.explanationRulesHeadWithoutVariables == null) {
      this.explanationRulesHeadWithoutVariables = new ArrayList<String>();
    }
    this.explanationRulesHeadWithoutVariables.add(explanationRulesHeadWithoutVariablesItem);
    return this;
  }

   /**
   * Get explanationRulesHeadWithoutVariables
   * @return explanationRulesHeadWithoutVariables
  **/
  @ApiModelProperty(value = "")
  public List<String> getExplanationRulesHeadWithoutVariables() {
    return explanationRulesHeadWithoutVariables;
  }

  public void setExplanationRulesHeadWithoutVariables(List<String> explanationRulesHeadWithoutVariables) {
    this.explanationRulesHeadWithoutVariables = explanationRulesHeadWithoutVariables;
  }

  public QueryResult explanationStr(String explanationStr) {
    this.explanationStr = explanationStr;
    return this;
  }

   /**
   * Get explanationStr
   * @return explanationStr
  **/
  @ApiModelProperty(value = "")
  public String getExplanationStr() {
    return explanationStr;
  }

  public void setExplanationStr(String explanationStr) {
    this.explanationStr = explanationStr;
  }

  public QueryResult humanExplanation(String humanExplanation) {
    this.humanExplanation = humanExplanation;
    return this;
  }

   /**
   * Get humanExplanation
   * @return humanExplanation
  **/
  @ApiModelProperty(value = "")
  public String getHumanExplanation() {
    return humanExplanation;
  }

  public void setHumanExplanation(String humanExplanation) {
    this.humanExplanation = humanExplanation;
  }

  public QueryResult variables(Map<String, String> variables) {
    this.variables = variables;
    return this;
  }

  public QueryResult putVariablesItem(String key, String variablesItem) {
    if (this.variables == null) {
      this.variables = new HashMap<String, String>();
    }
    this.variables.put(key, variablesItem);
    return this;
  }

   /**
   * Get variables
   * @return variables
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getVariables() {
    return variables;
  }

  public void setVariables(Map<String, String> variables) {
    this.variables = variables;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryResult queryResult = (QueryResult) o;
    return Objects.equals(this.explanation, queryResult.explanation) &&
        Objects.equals(this.explanationRulesHeadWithoutVariables, queryResult.explanationRulesHeadWithoutVariables) &&
        Objects.equals(this.explanationStr, queryResult.explanationStr) &&
        Objects.equals(this.humanExplanation, queryResult.humanExplanation) &&
        Objects.equals(this.variables, queryResult.variables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(explanation, explanationRulesHeadWithoutVariables, explanationStr, humanExplanation, variables);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryResult {\n");
    
    sb.append("    explanation: ").append(toIndentedString(explanation)).append("\n");
    sb.append("    explanationRulesHeadWithoutVariables: ").append(toIndentedString(explanationRulesHeadWithoutVariables)).append("\n");
    sb.append("    explanationStr: ").append(toIndentedString(explanationStr)).append("\n");
    sb.append("    humanExplanation: ").append(toIndentedString(humanExplanation)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

