# Azure Functions Premium Configuration
# Purpose: Deploys an Azure Functions app with premium plan for enhanced performance
# Use case: Event-driven applications requiring consistent performance, VNet integration, and longer execution times

apiVersion: 2023-01-01
kind: AzureDeployment
metadata:
  name: premium-functions
  description: Azure Functions Premium deployment for high-performance event processing
  tags:
    environment: production
    workloadType: serverless-premium
    costCenter: IT-Applications

parameters:
  location:
    type: string
    defaultValue: westeurope
    allowedValues:
      - westeurope
      - northeurope
      - eastus
      - westus2
    description: Azure region for resource deployment
  
  functionAppName:
    type: string
    defaultValue: func-premium
    description: Name of the function app (must be globally unique)
  
  runtime:
    type: string
    defaultValue: dotnet
    allowedValues:
      - dotnet
      - node
      - python
      - java
    description: Runtime stack for the function app
  
  skuTier:
    type: string
    defaultValue: EP1
    allowedValues:
      - EP1
      - EP2
      - EP3
    description: Premium plan SKU (EP1=1 core, EP2=2 cores, EP3=4 cores)

resources:
  # Virtual Network
  - type: Microsoft.Network/virtualNetworks
    apiVersion: 2022-07-01
    name: func-premium-vnet
    location: "[parameters('location')]"
    properties:
      addressSpace:
        addressPrefixes:
          - 10.0.0.0/16
      subnets:
        - name: function-subnet
          properties:
            addressPrefix: 10.0.1.0/24
            delegations:
              - name: delegation
                properties:
                  serviceName: Microsoft.Web/serverFarms

  # Storage Account for Function App
  - type: Microsoft.Storage/storageAccounts
    apiVersion: 2022-09-01
    name: "[concat('st', uniqueString(resourceGroup().id))]"
    location: "[parameters('location')]"
    sku:
      name: Standard_LRS
    kind: StorageV2
    properties:
      supportsHttpsTrafficOnly: true
      minimumTlsVersion: TLS1_2
      allowBlobPublicAccess: false
      networkAcls:
        defaultAction: Allow
        bypass: AzureServices

  # Application Insights
  - type: Microsoft.Insights/components
    apiVersion: 2020-02-02
    name: "[concat(parameters('functionAppName'), '-insights')]"
    location: "[parameters('location')]"
    kind: web
    properties:
      Application_Type: web
      WorkspaceResourceId: "[resourceId('Microsoft.OperationalInsights/workspaces', concat(parameters('functionAppName'), '-workspace'))]"
      publicNetworkAccessForIngestion: Enabled
      publicNetworkAccessForQuery: Enabled

  # Log Analytics Workspace
  - type: Microsoft.OperationalInsights/workspaces
    apiVersion: 2022-10-01
    name: "[concat(parameters('functionAppName'), '-workspace')]"
    location: "[parameters('location')]"
    properties:
      sku:
        name: PerGB2018
      retentionInDays: 30

  # Premium Plan (ElasticPremium)
  - type: Microsoft.Web/serverfarms
    apiVersion: 2022-03-01
    name: "[concat(parameters('functionAppName'), '-plan')]"
    location: "[parameters('location')]"
    sku:
      name: "[parameters('skuTier')]"
      tier: ElasticPremium
      family: EP
    properties:
      maximumElasticWorkerCount: 20
      reserved: true  # Required for Linux

  # Function App
  - type: Microsoft.Web/sites
    apiVersion: 2022-03-01
    name: "[parameters('functionAppName')]"
    location: "[parameters('location')]"
    kind: functionapp,linux
    dependsOn:
      - "[resourceId('Microsoft.Web/serverfarms', concat(parameters('functionAppName'), '-plan'))]"
      - "[resourceId('Microsoft.Storage/storageAccounts', concat('st', uniqueString(resourceGroup().id)))]"
      - "[resourceId('Microsoft.Insights/components', concat(parameters('functionAppName'), '-insights'))]"
      - "[resourceId('Microsoft.Network/virtualNetworks', 'func-premium-vnet')]"
    properties:
      serverFarmId: "[resourceId('Microsoft.Web/serverfarms', concat(parameters('functionAppName'), '-plan'))]"
      siteConfig:
        linuxFxVersion: "[concat('FUNCTIONS:', parameters('runtime'))]"
        vnetRouteAllEnabled: true  # Route all traffic through VNet
        appSettings:
          - name: AzureWebJobsStorage
            value: "[concat('DefaultEndpointsProtocol=https;AccountName=', concat('st', uniqueString(resourceGroup().id)), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', concat('st', uniqueString(resourceGroup().id))), '2022-09-01').keys[0].value)]"
          - name: WEBSITE_CONTENTAZUREFILECONNECTIONSTRING
            value: "[concat('DefaultEndpointsProtocol=https;AccountName=', concat('st', uniqueString(resourceGroup().id)), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', concat('st', uniqueString(resourceGroup().id))), '2022-09-01').keys[0].value)]"
          - name: WEBSITE_CONTENTSHARE
            value: "[toLower(parameters('functionAppName'))]"
          - name: FUNCTIONS_EXTENSION_VERSION
            value: ~4
          - name: APPINSIGHTS_INSTRUMENTATIONKEY
            value: "[reference(resourceId('Microsoft.Insights/components', concat(parameters('functionAppName'), '-insights')), '2020-02-02').InstrumentationKey]"
          - name: FUNCTIONS_WORKER_RUNTIME
            value: "[parameters('runtime')]"
          - name: WEBSITE_VNET_ROUTE_ALL
            value: 1
          - name: WEBSITE_DNS_SERVER
            value: 168.63.129.16
        ftpsState: Disabled
        minTlsVersion: 1.2
        http20Enabled: true
        alwaysOn: true  # Keep the function app loaded

  # VNet Integration
  - type: Microsoft.Web/sites/networkConfig
    apiVersion: 2022-03-01
    name: "[concat(parameters('functionAppName'), '/virtualNetwork')]"
    dependsOn:
      - "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
    properties:
      subnetResourceId: "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'func-premium-vnet', 'function-subnet')]"
      swiftSupported: true

outputs:
  functionAppUrl:
    type: string
    value: "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName'))).defaultHostName)]"
  vnetName:
    type: string
    value: func-premium-vnet